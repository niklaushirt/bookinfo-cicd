# Source: demo-cicd/charts/reviews/templates/service-account.yaml
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  annotations:
    app.ibm.com/is-local-deployable: "false"
  name: demo-cicd-reviews-sa-deployable
  namespace: demo-cicd-source
  labels:
    appname: demo-cicd-demo
    release: demo-cicd-demo
    component: reviews
    prereq: "yes"
spec:
  template:
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: demo-cicd-reviews
---
# Source: demo-cicd/charts/reviews/templates/clusterrole.yaml
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  annotations:
    app.ibm.com/is-local-deployable: "false"
  name: demo-cicd-reviews-rbac-deployable
  namespace: demo-cicd-source
  labels:
    appname: demo-cicd-demo
    release: demo-cicd-demo
    component: reviews
    prereq: "yes"
spec:
  template:
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: reviews-lwdc-query
    rules:
    - apiGroups:
      - ""
      - apps
      resources:
      - clusters
      - nodes
      - services
      - configmaps
      - pods
      - endpoints
      - deployments
      verbs:
      - list
      - get
    - apiGroups:
      - extensions
      attributeRestrictions: null
      resourceNames:
      - ibm-anyuid-psp
      resources:
      - podsecuritypolicies
      verbs:
      - use
    - apiGroups:
      - security.openshift.io 
      resources:
      - securitycontextconstraints 
      verbs:
      - use
      resourceNames:
      - anyuid
---
# Source: demo-cicd/charts/reviews/templates/rolebinding.yaml
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  annotations:
    app.ibm.com/is-local-deployable: "false"
  name: demo-cicd-reviews-crb-deployable
  namespace: demo-cicd-source
  labels:
    appname: demo-cicd-demo
    release: demo-cicd-demo
    component: reviews
    prereq: "yes"
spec:
  template:
    kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: reviews-lwdc-rolebinding
      namespace: demo-cicd
    subjects:
    - kind: User
      name: system:serviceaccount:demo-cicd:demo-cicd-reviews
      apiGroup: rbac.authorization.k8s.io
    roleRef:
      kind: ClusterRole
      name: reviews-lwdc-query
      apiGroup: rbac.authorization.k8s.io
---
# Source: demo-cicd/charts/reviews/templates/service.yaml
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  annotations:
    app.ibm.com/is-local-deployable: "false"
  name: demo-cicd-reviews-svc-deployable
  namespace: demo-cicd-source
  labels:
    appname: demo-cicd-demo
    release: demo-cicd-demo
    component: reviews
    prereq: "no"
spec:
  template:
    apiVersion: v1
    kind: Service
    metadata:
      name: reviews
      labels:
        app.kubernetes.io/name: reviews
        app.kubernetes.io/instance: demo-cicd-demo
    spec:
      ports:
        - port: 9080
          targetPort: http
          protocol: TCP
          name: http
      selector:
        app.kubernetes.io/name: reviews
        app.kubernetes.io/instance: demo-cicd-demo

---
# Source: demo-cicd/charts/reviews/templates/deployment.yaml
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  annotations:
    app.ibm.com/is-local-deployable: "false"
  name: demo-cicd-reviews-deploy-deployable
  namespace: demo-cicd-source
  labels:
    appname: demo-cicd-demo
    release: demo-cicd-demo
    component: reviews
    prereq: "no"
spec:
  template:
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: demo-cicd-demo-reviews
      labels:
        app.kubernetes.io/name: reviews
        app.kubernetes.io/instance: demo-cicd-demo
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/name: reviews
          app.kubernetes.io/instance: demo-cicd-demo
      template:
        metadata:
          labels:
            app.kubernetes.io/name: reviews
            app.kubernetes.io/instance: demo-cicd-demo
        spec:
          serviceAccountName: demo-cicd-reviews
          containers:
            - env:
              - name: OPENTRACING_ENABLED
                value: "true"
              - name: JAEGER_SAMPLER_TYPE
                value: "probabilistic"
              - name: JAEGER_SAMPLER_PARAM
                value: "1"
              - name: LATENCY_SAMPLER_PARAM
                value: "1"
              name: reviews
              image: "docker.io/dymaczew/examples-demo-cicd-reviews-v3:2020.1.0.1"
              imagePullPolicy: Always
              ports:
                - name: http
                  containerPort: 9080
                  protocol: TCP
              livenessProbe:
                httpGet:
                  path: /health
                  port: http
                initialDelaySeconds: 120
              failureThreshold: 6
              readinessProbe:
                httpGet:
                  path: /health
                  port: http
                initialDelaySeconds: 120
              failureThreshold: 10
              volumeMounts:
              - mountPath: /opt/ibm/apm/serverconfig
                name: global-environment
              resources:
                {}                
          securityContext:
            runAsUser: 1001        
          volumes:
          - name: global-environment
            secret:
              defaultMode: 420
              optional: true
              secretName: icam-server-secret

---
